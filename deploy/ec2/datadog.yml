# datadog.yml
# Install datadog probes on each host
# run cmd: ansible-playbook -i ec2.py --extra-vars="@your-var-file.yml" datadog.yml
---
- name: Install Datadog Monitoring - Web
  hosts: "{{ galaxy_hosts_web }}" 
  become: yes
  vars:
    datadog_checks:
      mcache:
        init_config:
        instances:
          - url: localhost
            port: 11211  
      apache:
        init_config:
        instances:
          - apache_status_url: "http://{{ ec2_private_ip_address }}:81/server-status?auto"
  roles:
    - role: Datadog.datadog

- name: Install Datadog Monitoring - DB
  hosts: "{{ galaxy_hosts_db }}" 
  become: yes
  vars:
    datadog_checks:
      postgres: 
        init_config:
        instances:
          - host: localhost
            port: 5432
            username: "{{ datadog_postgres_user }}" 
            password: "{{ datadog_postgres_pass }}" 
        mcache:
          init_config:
          instances:
            - url: localhost
              port: 11211  
        rabbitmq:
          init_config:
          instances:
            - rabbitmq_api_url: http://localhost:15672/api/
              rabbitmq_user: guest
              rabbitmq_pass: guest
  tasks:
     - name: Start rabbitmq
       service: name=rabbitmq-server state=started

     - name: Enable rabbitmq management plugin
       shell: rabbitmq-plugins enable rabbitmq_management

     - name: Grant rabbitmq user permissions
       shell: rabbitmqctl set_permissions -p /galaxy guest ".*" ".*" ".*"

     - name: Restart rabbitmq on master
       service: name=rabbitmq-server state=restarted
       when: ec2_tag_galaxy_postgres == 'master' 

     - name: Stop rabbitmq on slave
       service: name=rabbitmq-server state=stopped
       when: ec2_tag_galaxy_postgres == 'slave' 
  roles:
    - role: postgres-monitor
    - role: Datadog.datadog

- name: Install Datadog Monitoring - ES 
  hosts: "{{ galaxy_hosts_elastic }}" 
  become: yes
  roles:
    - role: Datadog.datadog
  vars:
    datadog_checks:
      elastic:
        init_config:
        instances:
          - url: http://{{ ec2_private_ip_address }}:9200
            cluster_stats: true
            pshard_stats: true

- name: Install Datadog Monitoring - Celery
  hosts: "{{ galaxy_hosts_celery }}"
  become: yes
  roles:
    - role: Datadog.datadog

